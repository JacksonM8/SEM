<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="kind" attr.type="string" for="all" id="kind"/>
    <key attr.name="label" attr.type="string" for="all" id="label"/>

    <key attr.name="value" attr.type="string" for="all" id="value"/>
    <key attr.name="type" attr.type="string" for="all" id="type"/>
    <key attr.name="description" attr.type="string" for="all" id="description"/>

    <key attr.name="worker" attr.type="string" for="all" id="worker"/>
    <key attr.name="folder" attr.type="string" for="all" id="folder"/>
    <key attr.name="file" attr.type="string" for="all" id="file"/>
    <key attr.name="icon" attr.type="string" for="all" id="icon"/>
    <key attr.name="operation" attr.type="string" for="all" id="operation"/>
    <key attr.name="workerID" attr.type="string" for="all" id="workerID"/>
    <key attr.name="is_variadic" attr.type="boolean" for="all" id="is_variadic"/>

    <graph id="G">
        <node id="n0">
            <data key="kind">Workload</data>
            <data key="worker">Utility_Worker</data>
            <data key="label">Utility Worker</data>
            <data key="description">A Worker that provides utility functions for use in workload.</data>
            <graph id="n0:">
                <node id="n0::n0">
                    <data key="kind">WorkerProcess</data>
                    <data key="label">EvaluateComplexity</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">EvaluateComplexity</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">sigma</data>
                    <data key="description">Evaluate the complexity function given, may use one or more value parameters (eg n, m, x, y etc).</data>
                    <data key="workerID">utility_worker</data>
                    <data key="is_variadic">true</data>
                    <graph id="n0::n0:">
                        <node id="n0::n0::n0">
                            <data key="kind">InputParameter</data>
                            <data key="label">Complexity Function</data>
                            <data key="type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">sigma</data>
                            <data key="description">Mathematical expression for the complexity of an algorithm that will be simulated using a workload execution worker.</data>
                        </node>
                        <node id="n0::n0::n1">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Operations</data>
                            <data key="type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">clockCycle</data>
                            <data key="description">Number of operations, or size of memory to be used in workload execution</data>
                        </node>
                    </graph>
                </node>
                <node id="n0::n1">
                    <data key="kind">WorkerProcess</data>
                    <data key="label">Log</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">Log</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">book</data>
                    <data key="description">Logs a message to the database.</data>
                    <data key="workerID">utility_worker</data>
                    <data key="is_variadic">true</data>
                    <graph id="n0::n1:">
                        <node id="n0::n1:n0">
                            <data key="kind">InputParameter</data>
                            <data key="label">Message Format</data>
                            <data key="type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">format</data>
                            <data key="description">Message to Log.</data>
                        </node>
                        <node id="n0::n1::n1">
                            <data key="kind">InputParameter</data>
                            <data key="label">Print</data>
                            <data key="type">Boolean</data>
                            <data key="value">true</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">print</data>
                            <data key="description">Print the message to standard output.</data>
                        </node>
                    </graph>
                </node>
                <node id="n0::n2">
                    <data key="kind">WorkerProcess</data>
                    <data key="label">GetTimeOfDayString</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">GetTimeOfDayString</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">clock</data>
                    <data key="description">Get the time of day in a string.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="n0::n2:">
                        <node id="n0::n2:n0">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Time</data>
                            <data key="sortOrder">0</data>
                            <data key="type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">format</data>
                            <data key="description">Current Time of Day</data>
                        </node>
                    </graph>
                </node>
                <node id="n0::n3">
                    <data key="kind">WorkerProcess</data>
                    <data key="label">GetTimeOfDay</data>
                    <data key="sortOrder">1</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">GetTimeOfDay</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">clock</data>
                    <data key="description">Get the time of day as a double.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="n0::n3:">
                        <node id="n0::n3:n0">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Time</data>
                            <data key="sortOrder">0</data>
                            <data key="type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">numberOne</data>
                            <data key="description">Current Time of Day</data>
                        </node>
                    </graph>
                </node>
            </graph>
        </node>
    </graph>
</graphml>
