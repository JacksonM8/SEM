
#ifndef KEYNAME_LITERALS_H
#define KEYNAME_LITERALS_H

namespace KeyName {
    extern const char* Architecture;
    extern const char* BlackBox;
    extern const char* Class;
    extern const char* ClockFrequency;
    extern const char* Code;
    extern const char* Column;
    extern const char* ColumnCount;
    extern const char* Comment;
    extern const char* CppVarType;
    extern const char* Database;
    extern const char* DdsDomainID;
    extern const char* Description;
    extern const char* EditableKey;
    extern const char* Frequency;
    extern const char* FunctionName;
    extern const char* HeaderLocation;
    extern const char* Height;
    extern const char* ID;
    extern const char* Icon;
    extern const char* IconPrefix;
    extern const char* Index;
    extern const char* InnerType;
    extern const char* InterfaceName;
    extern const char* IpAddress;
    extern const char* IsAvailable;
    extern const char* IsDocker;
    extern const char* IsExpanded;
    extern const char* IsGenericParam;
    extern const char* IsGenericParamSrc;
    extern const char* IsLateJoiner;
    extern const char* IsOptionalParam;
    extern const char* IsVariadic;
    extern const char* IsWorker;
    extern const char* Key;
    extern const char* Kind;
    extern const char* Label;
    extern const char* MedeaVersion;
    extern const char* MemorySize;
    extern const char* Middleware;
    extern const char* Mode;
    extern const char* Namespace;
    extern const char* Operation;
    extern const char* OS;
    extern const char* OsVersion;
    extern const char* OuterType;
    extern const char* PrimitiveType;
    extern const char* ProcessesToLog;
    extern const char* QosDdsAccessScope;
    extern const char* QosDdsAutoDisposeUnregisteredInstances;
    extern const char* QosDdsAutoEnableCreatedEntities;
    extern const char* QosDdsAutoPurgeDisposedSamplesDelaySec;
    extern const char* QosDdsAutoPurgeDisposedSamplesDelayNanoSec;
    extern const char* QosDdsAutoPurgeNoWriterSamplesDelaySec;
    extern const char* QosDdsAutoPurgeNoWriterSamplesDelayNanoSec;
    extern const char* QosDdsCoherentAccess;
    extern const char* QosDdsDepth;
    extern const char* QosDdsDurationSec;
    extern const char* QosDdsDurationNanoSec;
    extern const char* QosDdsHistoryDepth;
    extern const char* QosDdsHistoryKind;
    extern const char* QosDdsIntValue;
    extern const char* QosDdsKind;
    extern const char* QosDdsLeaseDurationSec;
    extern const char* QosDdsLeaseDurationNanoSec;
    extern const char* QosDdsMaxBlockingTimeSec;
    extern const char* QosDdsMaxBlockingTimeNanoSec;
    extern const char* QosDdsMaxInstances;
    extern const char* QosDdsMaxSamples;
    extern const char* QosDdsMaxSamplesPerInstance;
    extern const char* QosDdsMinSeparationSec;
    extern const char* QosDdsMinSeparationNanoSec;
    extern const char* QosDdsName;
    extern const char* QosDdsOrderedAccess;
    extern const char* QosDdsPeriodSec;
    extern const char* QosDdsPeriodNanoSec;
    extern const char* QosDdsServiceCleanupDelaySec;
    extern const char* QosDdsServiceCleanupDelayNanoSec;
    extern const char* QosDdsStrValue;
    extern const char* QpidBrokerAddress;
    extern const char* ReadOnly;
    extern const char* ReplicateCount;
    extern const char* ReplicateValue;
    extern const char* Row;
    extern const char* TaoNamingServiceEndpoint;
    extern const char* TaoServerName;
    extern const char* TaoServerKind;
    extern const char* TopicName;
    extern const char* Type;
    extern const char* Url;
    extern const char* UUID;
    extern const char* Value;
    extern const char* Vendor;
    extern const char* Version;
    extern const char* Width;
    extern const char* Worker;
    extern const char* WorkerID;
    extern const char* X;
    extern const char* Y;
    extern const char* ZmqPublisherAddress;
    extern const char* ZmqServerAddress;
};

#endif //KEYNAME_LITERALS_H