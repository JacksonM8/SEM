<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="kind" attr.type="string" for="all" id="kind"/>
    <key attr.name="label" attr.type="string" for="all" id="label"/>

    <key attr.name="value" attr.type="string" for="all" id="value"/>
    <key attr.name="type" attr.type="string" for="all" id="type"/>
    <key attr.name="inner_type" attr.type="string" for="all" id="inner_type"/>
    <key attr.name="description" attr.type="string" for="all" id="description"/>

    <key attr.name="worker" attr.type="string" for="all" id="worker"/>
    <key attr.name="folder" attr.type="string" for="all" id="folder"/>
    <key attr.name="file" attr.type="string" for="all" id="file"/>
    <key attr.name="icon" attr.type="string" for="all" id="icon"/>
    <key attr.name="icon_prefix" attr.type="string" for="all" id="icon_prefix"/>
    <key attr.name="operation" attr.type="string" for="all" id="operation"/>
    <key attr.name="workerID" attr.type="string" for="all" id="workerID"/>
    <key attr.name="is_variadic" attr.type="boolean" for="all" id="is_variadic"/>

    <graph id="G">
        <node id="utilityworker">
            <data key="kind">WorkerDefinition</data>
            <data key="version">1.01.00</data>
            <data key="worker">Utility_Worker</data>
            <data key="label">Utility Worker</data>
            <data key="description">A Worker that provides utility functions for use in workload.</data>
            <data key="icon_prefix">Icons</data>
            <data key="icon">spanner</data>
            <graph id="utilityworker:">
                <node id="utilityworker::evaluatecomplexity">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">EvaluateComplexity</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">EvaluateComplexity</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">sigma</data>
                    <data key="description">Evaluate the complexity function given, may use one or more value parameters (eg n, m, x, y etc).</data>
                    <data key="workerID">utility_worker</data>
                    <data key="is_variadic">true</data>
                    <graph id="utilityworker::evaluatecomplexity:">
                        <node id="utilityworker::evaluatecomplexity::complexity">
                            <data key="kind">InputParameter</data>
                            <data key="label">Complexity Function</data>
                            <data key="inner_type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">sigma</data>
                            <data key="description">Mathematical expression for the complexity of an algorithm that will be simulated using a workload execution worker.</data>
                        </node>
                        <node id="utilityworker::evaluatecomplexity::ops">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Operations</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">clockCycle</data>
                            <data key="description">Number of operations, or size of memory to be used in workload execution</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::log">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">Log</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">Log</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">book</data>
                    <data key="description">Logs a message to the database.</data>
                    <data key="workerID">utility_worker</data>
                    <data key="is_variadic">true</data>
                    <graph id="utilityworker::log:">
                        <node id="utilityworker::log::message">
                            <data key="kind">InputParameter</data>
                            <data key="label">Message Format</data>
                            <data key="inner_type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">format</data>
                            <data key="description">Message to Log.</data>
                        </node>
                        <node id="utilityworker::log::print">
                            <data key="kind">InputParameter</data>
                            <data key="label">Print</data>
                            <data key="inner_type">Boolean</data>
                            <data key="value">true</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">printer</data>
                            <data key="description">Print the message to standard output.</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::gettimeofdaystring">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetTimeOfDayString</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">GetTimeOfDayString</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">clock</data>
                    <data key="description">Get the time of day in a string.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::gettimeofdaystring:">
                        <node id="utilityworker::gettimeofdaystring::time">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Time</data>
                            <data key="inner_type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">format</data>
                            <data key="description">Current Time of Day</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::gettimeofday">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetTimeOfDay</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">GetTimeOfDay</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">clock</data>
                    <data key="description">Get the time of day as a double.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::gettimeofday:">
                        <node id="utilityworker::gettimeofday::time">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Time</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">numberOne</data>
                            <data key="description">Current Time of Day</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::setrandomseed">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">SetRandomSeed</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">SetRandomSeed</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">drop</data>
                    <data key="description">Sets the seed for the Random Number Generator used by this worker.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::setrandomseed:">
                        <node id="utilityworker::setrandomseed::seed">
                            <data key="kind">InputParameter</data>
                            <data key="label">Seed</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">format</data>
                            <data key="description">The seed value</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::usleep">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">USleep</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">USleep</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">bed</data>
                    <data key="description">Sleeps the current thread for x microseconds.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::usleep:">
                        <node id="utilityworker::usleep::duration">
                            <data key="kind">InputParameter</data>
                            <data key="label">duration</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">clockDark</data>
                            <data key="description">Microseconds to sleep for</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::sleep">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">Sleep</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">Sleep</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">bed</data>
                    <data key="description">Sleeps the current thread for x seconds.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::sleep:">
                        <node id="utilityworker::sleep::duration">
                            <data key="kind">InputParameter</data>
                            <data key="label">duration</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">clockDark</data>
                            <data key="description">Seconds to sleep for</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::getrandomuniformint">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetRandomUniformInt</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">RandomUniformInt</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">chartUniform</data>
                    <data key="description">Gets a random Integer in an inclusive range (Lower Bound - Upper Bound)</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::getrandomuniformint:">
                        <node id="utilityworker::getrandomuniformint::lowerbounds">
                            <data key="kind">InputParameter</data>
                            <data key="label">Lower Bound</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">arrowLineLeft</data>
                            <data key="description">The lower bound</data>
                        </node>
                        <node id="utilityworker::getrandomuniformint::upperbounds">
                            <data key="kind">InputParameter</data>
                            <data key="label">Upper Bound</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">arrowLineRight</data>
                            <data key="description">The upper bound</data>
                        </node>
                        <node id="utilityworker::getrandomuniformint::value">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Value</data>
                            <data key="inner_type">Integer</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">squareEquals</data>
                            <data key="description">The random integer</data>
                        </node>
                    </graph>
                </node>

                <node id="utilityworker::getrandomuniformreal">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetRandomUniformReal</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">RandomUniformReal</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">chartUniform</data>
                    <data key="description">Gets a random double in an inclusive range (Lower Bound - Upper Bound)</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::getrandomuniformreal:">
                        <node id="utilityworker::getrandomuniformreal::lowerbound">
                            <data key="kind">InputParameter</data>
                            <data key="label">Lower Bound</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">arrowLineLeft</data>
                            <data key="description">The lower bound</data>
                        </node>
                        <node id="utilityworker::getrandomuniformreal::upperbound">
                            <data key="kind">InputParameter</data>
                            <data key="label">Upper Bound</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">arrowLineRight</data>
                            <data key="description">The upper bound</data>
                        </node>
                        <node id="utilityworker::getrandomuniformreal::value">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Value</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">squareEquals</data>
                            <data key="description">The random double</data>
                        </node>
                    </graph>
                </node>

                <node id="utilityworker::getrandomnormalreal">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetRandomNormalReal</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">RandomNormalReal</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">chartNormal</data>
                    <data key="description">Gets a random double in a Normal distribution.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::getrandomnormalreal:">
                        <node id="utilityworker::getrandomnormalreal::mean">
                            <data key="kind">InputParameter</data>
                            <data key="label">Mean</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">chartMean</data>
                            <data key="description">The mean of the normal distribution</data>
                        </node>
                        <node id="utilityworker::getrandomnormalreal::standarddeviation">
                            <data key="kind">InputParameter</data>
                            <data key="label">Standard Deviation</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">chartStdDev</data>
                            <data key="description">The standard deviation of the normal distribution</data>
                        </node>
                        <node id="utilityworker::getrandomnormalreal::value">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Value</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">squareEquals</data>
                            <data key="description">The random double</data>
                        </node>
                    </graph>
                </node>

                <node id="utilityworker::getrandomexponentialreal">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetRandomExponentialReal</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">RandomExponentialReal</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">chartExponential</data>
                    <data key="description">Gets a random double in an Exponential distribution. This distribution produces random numbers where each value represents the interval between two random events that are independent but statistically defined by a constant average rate of occurrence</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::getrandomexponentialreal:">
                        <node id="utilityworker::getrandomexponentialreal::lambda">
                            <data key="kind">InputParameter</data>
                            <data key="label">Lambda</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">chartLambda</data>
                            <data key="description">The mean of the normal distribution</data>
                        </node>
                        <node id="utilityworker::getrandomexponentialreal::value">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">Value</data>
                            <data key="inner_type">Double</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">squareEquals</data>
                            <data key="description">The random double</data>
                        </node>
                    </graph>
                </node>
                <node id="utilityworker::generateuuid">
                    <data key="kind">WorkerFunction</data>
                    <data key="label">GetUUID</data>
                    <data key="worker">Utility_Worker</data>
                    <data key="folder">${RE_PATH}/src/workers/utility</data>
                    <data key="file">utility_worker</data>
                    <data key="operation">GenerateUUID</data>
                    <data key="icon_prefix">Icons</data>
                    <data key="icon">fingerprint</data>
                    <data key="description">Generates a 128-bit unique universal unique identifier, in the form of a string. Represented as 32 hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12.</data>
                    <data key="workerID">utility_worker</data>
                    <graph id="utilityworker::generateuuid:">
                        <node id="utilityworker::generateuuid::uuid">
                            <data key="kind">ReturnParameter</data>
                            <data key="label">UUID</data>
                            <data key="inner_type">String</data>
                            <data key="icon_prefix">Icons</data>
                            <data key="icon">squareEquals</data>
                            <data key="description">The uuid</data>
                        </node>
                    </graph>
                </node>
            </graph>
        </node>
    </graph>
</graphml>
