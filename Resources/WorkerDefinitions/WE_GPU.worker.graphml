<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns">
	<key attr.name="kind" attr.type="string" for="node" id="2"/>
        <key attr.name="x" attr.type="double" for="node" id="4" />
        <key attr.name="y" attr.type="double" for="node" id="5" />
        <key attr.name="width" attr.type="double" for="node" id="7" />
        <key attr.name="height" attr.type="double" for="node" id="8" />
	<key attr.name="label" attr.type="string" for="node" id="3"/>
        <key attr.name="sortOrder" attr.type="int" for="node" id="9" />
        <key attr.name="isExpanded" attr.type="boolean" for="node" id="10" />
	<key attr.name="description" attr.type="string" for="node" id="362"/>
	<key attr.name="code" attr.type="string" for="node" id="463"/>
	<key attr.name="worker" attr.type="string" for="node" id="465"/>
	<key attr.name="folder" attr.type="string" for="node" id="467"/>
	<key attr.name="file" attr.type="string" for="node" id="468"/>
	<key attr.name="operation" attr.type="string" for="node" id="469"/>
	<key attr.name="value" attr.type="string" for="node" id="472"/>
	<key attr.name="type" attr.type="string" for="node" id="6"/>
	<key attr.name="readOnly" attr.type="boolean" for="node" id="9999"/>
        <key attr.name="workerID" attr.type="string" for="node" id="d26"/>

	<graph edgedefault="directed" id="parentGraph0">
		<node id ="483">
			<data key="2">Workload</data>
			<data key="4">54</data>
			<data key="5">140</data>
			<data key="7">1298.43</data>
			<data key="8">520</data>
			<data key="3">WE_GPU</data>
			<data key="9">0</data>
			<data key="10">true</data>
			<data key="362">A CUTS worker that provides GPGPU functionality.</data>
			<data key="9999">true</data>
			<graph id ="g483">
				<node id ="519">
					<data key="2">Process</data>
					<data key="4">54</data>
					<data key="5">140</data>
					<data key="7">326</data>
					<data key="8">358.577</data>
					<data key="3">bufferData</data>
					<data key="9">0</data>
					<data key="10">true</data>
					<data key="463"></data>
                                        <data key="465">WE_GPU</data>

                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
					<data key="469">bufferData</data>
					<data key="362">Buffer a given amount of data, optionally copying that across to the GPU by default</data>
					<data key="9999">true</data>
                                        <data key="d26">we_gpu</data>

					<graph id ="g519">
						<node id ="565">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">bytes</data>
							<data key="9">0</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The number of bytes in the buffer to be deallocated</data>
							<data key="9999">true</data>
						</node>
						<node id ="596">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">190</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">forceCopy</data>
							<data key="9">1</data>
							<data key="472"></data>
							<data key="6">Boolean</data>
							<data key="362">Whether or not to read the buffer data back from a GPU before deleting</data>
							<data key="9999">true</data>
						</node>
						<node id ="627">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">blocking</data>
							<data key="9">2</data>
							<data key="472"></data>
							<data key="6">Boolean</data>
							<data key="362">Whether to pause until the read is complete</data>
                                                        <data key="9999">true</data>
						</node>
						<node id ="658">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">290</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">gpuNum</data>
							<data key="9">3</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The index of the target GPU/device (starting from 0)</data>
							<data key="9999">true</data>
						</node>
						<node id ="688">
							<data key="2">ReturnParameter</data>
							<data key="4">304</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">success</data>
							<data key="9">4</data>
							<data key="6">Boolean</data>
							<data key="362">Whether or not the deallocation (and read if specified) successfully completed</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
				<node id ="725">
					<data key="2">Process</data>
					<data key="4">404</data>
					<data key="5">140</data>
					<data key="7">326</data>
					<data key="8">358.577</data>
					<data key="3">releaseData</data>
					<data key="9">1</data>
					<data key="10">true</data>
					<data key="463"></data>
					<data key="465">WE_GPU</data>
                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
					<data key="469">releaseData</data>
					<data key="362">Buffer a given amount of data, optionally copying that across to the GPU by default</data>
					<data key="9999">true</data>
                                        <data key="d26">we_gpu</data>
					<graph id ="g725">
						<node id ="771">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">bytes</data>
							<data key="9">0</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The number of bytes in the buffer to be deallocated</data>
							<data key="9999">true</data>
						</node>
						<node id ="802">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">190</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">forceCopy</data>
							<data key="9">1</data>
							<data key="472"></data>
							<data key="6">Boolean</data>
							<data key="362">Whether or not to read the buffer data back from a GPU before deleting</data>
							<data key="9999">true</data>
						</node>
						<node id ="833">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">blocking</data>
							<data key="9">2</data>
							<data key="472"></data>
							<data key="6">Boolean</data>
							<data key="362">Whether to pause until the read is complete</data>
							<data key="9999">true</data>
						</node>
						<node id ="864">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">290</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">gpuNum</data>
							<data key="9">3</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The index of the target GPU/device (starting from 0)</data>
							<data key="9999">true</data>
						</node>
						<node id ="894">
							<data key="2">ReturnParameter</data>
							<data key="4">304</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">success</data>
							<data key="9">4</data>
							<data key="6">Boolean</data>
							<data key="362">Whether or not the deallocation (and read if specified) successfully completed</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
				<node id ="931">
					<data key="2">Process</data>
					<data key="4">754</data>
					<data key="5">140</data>
					<data key="7">76</data>
					<data key="8">162</data>
					<data key="3">setKernelComplexity</data>
					<data key="9">2</data>
					<data key="10">true</data>
					<data key="463"></data>
					<data key="465">WE_GPU</data>
                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
					<data key="469">setKernelComplexity</data>
					<data key="362">Set the complexity of the kernel for subsequent executions (passing in the result of the evaluated complexity function)</data>
					<data key="9999">true</data>
                                        <data key="d26">we_gpu</data>
					<graph id ="g931">
						<node id ="977">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">operations</data>
							<data key="9">0</data>
							<data key="472"></data>
                                                        <data key="6">DoubleNumber</data>
							<data key="362">The amount of operations to be performed per kernel execution (will be rounded to the nearest integer.</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
				<node id ="1016">
					<data key="2">Process</data>
					<data key="4">854</data>
					<data key="5">140</data>
					<data key="7">76.782</data>
					<data key="8">262</data>
					<data key="3">runParallel</data>
					<data key="9">3</data>
					<data key="10">true</data>
					<data key="463"></data>
					<data key="465">WE_GPU</data>
                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
					<data key="469">runParallel</data>
					<data key="362">Launch a kernel to run on a GPU, executing as many of the specified work-items (threads) as is possible at once. Doesn&apos;t contain factors such as excessive global memory reads or inter-work-item synchronisation that could result in performance scaling better than some kernels as the number of work-items increases.</data>
					<data key="9999">true</data>
                                        <data key="d26">we_gpu</data>
					<graph id ="g1016">
						<node id ="1062">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">workItems</data>
							<data key="9">0</data>
							<data key="472"></data>
                                                        <data key="6">DoubleNumber</data>
							<data key="362">The amount of work-items to be spawned.</data>
							<data key="9999">true</data>
						</node>
						<node id ="1093">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">gpuNum</data>
							<data key="9">1</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The index of the target GPU/device (starting from 0)</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
				<node id ="1768">
					<data key="2">Process</data>
					<data key="4">954</data>
					<data key="5">140</data>
					<data key="7">76</data>
					<data key="8">262</data>
					<data key="3">FFT</data>
					<data key="9">4</data>
					<data key="10">true</data>
					<data key="463"></data>
					<data key="465">WE_GPU</data>
                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
                                        <data key="469">FFT</data>
					<data key="362">Run an FFT usign the given data, with the result overwriting the input array. The input should be an array of real floats, which is replaced by the an array of interleaved real and imaginary numbers stored as floats, with the complex conjugates discarded (Hermetian). Note: as each FFT in O(n*log(n)) wrt sampleLength execution times should increase as sampleLength is increased. A decrease is potentially a sign that initialisation and memory transfer bottlenecks are overwhelming compute bottlenecks.</data>
                                        <data key="9999">true</data>
                                        <data key="d26">we_gpu</data>
					<graph id ="g1768">
						<node id ="1814">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">data</data>
							<data key="9">0</data>
							<data key="472"></data>
							<data key="6">WE_UTE_Vector</data>
							<data key="362">The amount of operations to be performed per kernel execution (will be rounded to the nearest integer.</data>
							<data key="9999">true</data>
						</node>
						<node id ="2080">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">gpuNum</data>
							<data key="9">1</data>
							<data key="472"></data>
							<data key="6">UnsignedLongInteger</data>
							<data key="362">The index of the target GPU/device (starting from 0)</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
				<node id ="2867">
					<data key="2">Process</data>
					<data key="4">1054</data>
					<data key="5">140</data>
					<data key="7">276.434</data>
					<data key="8">362</data>
					<data key="3">matrixMult</data>
					<data key="9">5</data>
					<data key="10">true</data>
					<data key="463"></data>
					<data key="465">WE_GPU</data>
                                        <data key="467">$(CUTS_ROOT)/cuts/workers/we_gpu</data>
                                        <data key="468">WE_GPU</data>
                                        <data key="469">matrixMult</data>
					<data key="362">Run an FFT usign the given data, with the result overwriting the input array. The input should be an array of real floats, which is replaced by the an array of interleaved real and imaginary numbers stored as floats, with the complex conjugates discarded (Hermetian). Note: as each FFT in O(n*log(n)) wrt sampleLength execution times should increase as sampleLength is increased. A decrease is potentially a sign that initialisation and memory transfer bottlenecks are overwhelming compute bottlenecks.</data>
                                        <data key="9999">true</data>
                                        <data key="d26">we_gpu</data>
					<graph id ="g2867">
						<node id ="2913">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">140</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">matrixA</data>
							<data key="9">0</data>
							<data key="472"></data>
							<data key="6">WE_UTE_Vector</data>
							<data key="362">The first of the two matrix operands</data>
							<data key="9999">true</data>
						</node>					
						<node id ="3294">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">190</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">matrixB</data>
                                                        <data key="9">1</data>
							<data key="472"></data>
							<data key="6">WE_UTE_Vector</data>
							<data key="362">The second of the two matrix operands</data>
							<data key="9999">true</data>
						</node>
						<node id ="3504">
							<data key="2">InputParameter</data>
							<data key="4">54</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">matrixC</data>
                                                        <data key="9">2</data>
							<data key="472"></data>
							<data key="6">WE_UTE_Vector</data>
							<data key="362">The matrix to be filled with the result of the multiplication.</data>
							<data key="9999">true</data>
						</node>
                                                <node id ="2944">
                                                        <data key="2">InputParameter</data>
                                                        <data key="4">54</data>
                                                        <data key="5">290</data>
                                                        <data key="7">36</data>
                                                        <data key="8">36</data>
                                                        <data key="3">gpuNum</data>
                                                        <data key="9">3</data>
                                                        <data key="472"></data>
                                                        <data key="6">UnsignedLongInteger</data>
                                                        <data key="362">The index of the target GPU/device (starting from 0)</data>
                                                        <data key="9999">true</data>
                                                </node>
						<node id ="3935">
							<data key="2">ReturnParameter</data>
							<data key="4">254</data>
							<data key="5">240</data>
							<data key="7">36</data>
							<data key="8">36</data>
							<data key="3">resultingMatrix</data>
							<data key="9">4</data>
							<data key="6">WE_UTE_Vector</data>
							<data key="9999">true</data>
						</node>
					</graph>
				</node>
			</graph>
		</node>
	</graph>
</graphml>
